- platform: sabnzbd
  name: SAB
  api_key: !secret sabnzbd_api_key
  host: !secret sabnzbd_host
  monitored_variables:
  - 'current_status'
  - 'speed'
  - 'queue_remaining'
- platform: mfi
  host: !secret mfi_host
  username: !secret mfi_username
  password: !secret mfi_password
  ssl: true
  verify_ssl: false
  scan_interval: 3
  entity_namespace: mfi
- platform: haveibeenpwned
  email: 
    - !secret hibp_mail01
    - !secret hibp_mail02
    - !secret hibp_mail03
    - !secret hibp_mail04
    - !secret hibp_mail05
    - !secret hibp_mail06
- platform: travisci
  api_key: !secret travis_api_key
  repository:
  - home-assistant-config
  entity_namespace: travis
- platform: rest
  name: philips_tv_source
  scan_interval: 3
  resource: !secret philips_tv_source_api
  value_template: >
    {% if value_json.id == "30" %}
      amp
    {% elif value_json.id == "11" %}
      tv
    {% elif value_json.id == "34" %}
      gamecube
    {% else %}
      other
    {%endif %}
- platform: rest
  name: Aare
  resource: http://aare.schwumm.ch/aare.json
  unit_of_measurement: "Â°C"
  value_template: '{{ value_json.temperature }}'
  scan_interval: 3600
- platform: template
  sensors:
    sab_left_gb:
      friendly_name: 'SAB Left'
      unit_of_measurement: 'GB'
      value_template: '{{ (states("sensor.sab_left") | float / 1024) | round(1) }}'
    snuggery_source:
      value_template: >
        {% if is_state_attr('media_player.snuggery', 'source', 'Playlist') or is_state_attr('media_player.snuggery', 'source', 'Phono') %}
          music
        {% elif is_state_attr('media_player.snuggery', 'source', 'Kodi') %}
          movies
        {% elif is_state_attr('media_player.snuggery', 'source', 'Wii U') %}
          wiiu
        {% elif is_state_attr('media_player.snuggery', 'source', 'NES') %}
          nes
        {% else %}
          none
        {% endif %}
    active_media_players:
      friendly_name: 'Active Media Players'
      value_template: >
        {% if is_state("input_select.mediacenter", "music") %}
          media_player.spotify
        {% elif is_state("input_select.mediacenter", "movies") %}
          media_player.kodi
        {% else %}
        {% endif %}
- platform: random
  minimum: 25
  maximum: 50

