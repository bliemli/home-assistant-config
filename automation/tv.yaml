- alias: TV power on
  trigger:
    platform: template
    value_template: '{{ is_state("input_select.mediacenter", "movies") or is_state("input_select.mediacenter", "tv") or is_state("input_select.mediacenter", "wiiu") or is_state("input_select.mediacenter", "gamecube") or is_state("input_select.mediacenter", "nes") }}'
  action:
  - service: switch.turn_on
    data:
      entity_id: switch.mfi_tv
- alias: TVÂ power off
  trigger:
    platform: template
    value_template: '{{ is_state("input_select.mediacenter", "off") or is_state("input_select.mediacenter", "music") }}'
  action:
    service: switch.turn_off
    data:
      entity_id: switch.mfi_tv
- alias: TV source TV
  trigger:
    platform: template
    value_template: '{{ is_state("input_select.mediacenter", "tv") and not is_state("sensor.philips_tv_source", "tv") }}'
  action:
  - wait_template: '{{ states.sensor.philips_tv_source.state != "unavailable" }}'
  - service_template: '{{ "" if is_state("sensor.philips_tv_source", "tv") else "rest_command.tv_set_source_tv" }}'
- alias: TV source GameCube
  trigger:
    platform: template
    value_template: '{{ is_state("input_select.mediacenter", "gamecube") and not is_state("sensor.philips_tv_source", "gamecube") }}'
  action:
  - wait_template: '{{ states.sensor.philips_tv_source.state != "unavailable" }}'
  - service_template: '{{ "" if is_state("sensor.philips_tv_source", "gamecube") else "rest_command.tv_set_source_gamecube" }}'
- alias: TV source Amp
  trigger:
    platform: template
    value_template: '{{ (is_state("input_select.mediacenter", "music") or is_state("input_select.mediacenter", "movies") or is_state("input_select.mediacenter", "wiiu") or is_state("input_select.mediacenter", "nes")) and not is_state("sensor.philips_tv_source", "amp") }}'
  action:
  - wait_template: '{{ states.sensor.philips_tv_source.state != "unavailable" }}'
  - service_template: '{{ "" if is_state("sensor.philips_tv_source", "amp") else "rest_command.tv_set_source_amp" }}'

